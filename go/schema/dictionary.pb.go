// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dictionary.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DefinitionRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefinitionRequest) Reset()         { *m = DefinitionRequest{} }
func (m *DefinitionRequest) String() string { return proto.CompactTextString(m) }
func (*DefinitionRequest) ProtoMessage()    {}
func (*DefinitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04a5ffd1d26433d, []int{0}
}

func (m *DefinitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefinitionRequest.Unmarshal(m, b)
}
func (m *DefinitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefinitionRequest.Marshal(b, m, deterministic)
}
func (m *DefinitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefinitionRequest.Merge(m, src)
}
func (m *DefinitionRequest) XXX_Size() int {
	return xxx_messageInfo_DefinitionRequest.Size(m)
}
func (m *DefinitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DefinitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DefinitionRequest proto.InternalMessageInfo

func (m *DefinitionRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type DefinitionResponse struct {
	Definition           []string `protobuf:"bytes,1,rep,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefinitionResponse) Reset()         { *m = DefinitionResponse{} }
func (m *DefinitionResponse) String() string { return proto.CompactTextString(m) }
func (*DefinitionResponse) ProtoMessage()    {}
func (*DefinitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04a5ffd1d26433d, []int{1}
}

func (m *DefinitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefinitionResponse.Unmarshal(m, b)
}
func (m *DefinitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefinitionResponse.Marshal(b, m, deterministic)
}
func (m *DefinitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefinitionResponse.Merge(m, src)
}
func (m *DefinitionResponse) XXX_Size() int {
	return xxx_messageInfo_DefinitionResponse.Size(m)
}
func (m *DefinitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DefinitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DefinitionResponse proto.InternalMessageInfo

func (m *DefinitionResponse) GetDefinition() []string {
	if m != nil {
		return m.Definition
	}
	return nil
}

func init() {
	proto.RegisterType((*DefinitionRequest)(nil), "server.DefinitionRequest")
	proto.RegisterType((*DefinitionResponse)(nil), "server.DefinitionResponse")
}

func init() { proto.RegisterFile("dictionary.proto", fileDescriptor_c04a5ffd1d26433d) }

var fileDescriptor_c04a5ffd1d26433d = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0xc9, 0x4c, 0x2e,
	0xc9, 0xcc, 0xcf, 0x4b, 0x2c, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x4e,
	0x2d, 0x2a, 0x4b, 0x2d, 0x52, 0x52, 0xe7, 0x12, 0x74, 0x49, 0x4d, 0xcb, 0xcc, 0xcb, 0x04, 0x49,
	0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0x94, 0xe7, 0x17, 0xa5, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x26, 0x5c, 0x42, 0xc8, 0x0a, 0x8b, 0x0b,
	0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xe4, 0xb8, 0xb8, 0x52, 0xe0, 0xa2, 0x12, 0x8c, 0x0a, 0xcc, 0x1a,
	0x9c, 0x41, 0x48, 0x22, 0x46, 0x51, 0x5c, 0x5c, 0x2e, 0x70, 0xab, 0x85, 0x7c, 0xb8, 0x04, 0xa1,
	0x56, 0x20, 0x8c, 0x12, 0x92, 0xd4, 0x83, 0x38, 0x45, 0x0f, 0xc3, 0x1d, 0x52, 0x52, 0xd8, 0xa4,
	0x20, 0x36, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x7d, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x2b,
	0x14, 0x9f, 0x8e, 0xdd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DictionaryClient is the client API for Dictionary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DictionaryClient interface {
	RequestDefinition(ctx context.Context, in *DefinitionRequest, opts ...grpc.CallOption) (*DefinitionResponse, error)
}

type dictionaryClient struct {
	cc *grpc.ClientConn
}

func NewDictionaryClient(cc *grpc.ClientConn) DictionaryClient {
	return &dictionaryClient{cc}
}

func (c *dictionaryClient) RequestDefinition(ctx context.Context, in *DefinitionRequest, opts ...grpc.CallOption) (*DefinitionResponse, error) {
	out := new(DefinitionResponse)
	err := c.cc.Invoke(ctx, "/server.Dictionary/RequestDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DictionaryServer is the server API for Dictionary service.
type DictionaryServer interface {
	RequestDefinition(context.Context, *DefinitionRequest) (*DefinitionResponse, error)
}

// UnimplementedDictionaryServer can be embedded to have forward compatible implementations.
type UnimplementedDictionaryServer struct {
}

func (*UnimplementedDictionaryServer) RequestDefinition(ctx context.Context, req *DefinitionRequest) (*DefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestDefinition not implemented")
}

func RegisterDictionaryServer(s *grpc.Server, srv DictionaryServer) {
	s.RegisterService(&_Dictionary_serviceDesc, srv)
}

func _Dictionary_RequestDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryServer).RequestDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Dictionary/RequestDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryServer).RequestDefinition(ctx, req.(*DefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dictionary_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Dictionary",
	HandlerType: (*DictionaryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestDefinition",
			Handler:    _Dictionary_RequestDefinition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dictionary.proto",
}
